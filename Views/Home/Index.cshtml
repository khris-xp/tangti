@model IEnumerable<tangti.Models.Event>

@{
    ViewData["Title"] = "Home Page";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - tangti</title>
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
</head>

<body>
    <div class="container">
        <div class="banner">
            <h1 class="title-banner">Recommended For You</h1>
            <p class="description-banner">Tangti is a comprehensive web application designed to streamline the process
                of planning, organizing, and managing events of all types and sizes. Whether it's a corporate
                conference, a wedding, a music festival, or a community fundraiser, Eventify provides users with the
                tools they need to plan and execute successful events from start to finish.</p>
        </div>
        <div class="search-container">
            @using (Html.BeginForm("Index", "Event", FormMethod.Get, new { id = "searchForm" }))
            {
                <div class="search-bar">
                    @Html.TextBox("searchString", ViewBag.SearchString as string, new { placeholder = "Search events..." })
                    <button type="submit"><i class="fa fa-search"></i></button>
                </div>
            }
        </div>

        <div class="card-list">
            @foreach (var item in @Model)
            {
                <article class="card" id="card-@item.Id">
                    <figure class="card-image">
                        @if (item.Status != "CLOSED")
                        {
                            <a href="/Event/Details/@item.Id" id="ClickCard">
                            <img src=@item.Image alt="An orange painted blue, cut in half laying on a blue background" />
                        </a>
                        }
                        else 
                        {
                            <a href="/Event/memberlist/@item.Id" id="ClickCard">
                            <img src=@item.Image alt="An orange painted blue, cut in half laying on a blue background" />
                        </a>
                        }
                    </figure>
                    <div class="card-container">
                        <div class="card-category">
                            <div>@item.Category</div>
                        </div>
                        <div class="rate">
                            <input type="radio" id="star5" name="rate" value="5" />
                            <label for="star5" title="text">5 stars</label>
                            <input type="radio" id="star4" name="rate" value="4" />
                            <label for="star4" title="text">4 stars</label>
                            <input type="radio" id="star3" name="rate" value="3" />
                            <label for="star3" title="text">3 stars</label>
                            <input type="radio" id="star2" name="rate" value="2" />
                            <label for="star2" title="text">2 stars</label>
                            <input type="radio" id="star1" name="rate" value="1" />
                            <label for="star1" title="text">1 star</label>
                        </div>
                    </div>
                    <div class="card-header">
                         @if (item.Status != "CLOSED")
                        {
                            <a href="/Event/Details/@item.Id">@item.Title</a>
                        
                        }
                        else 
                        {
                            <a href="/Event/memberlist/@item.Id">@item.Title</a>
                   
                        }
                        <button class="icon-button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                                stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                display="block" id="Heart">
                                <path
                                    d="M7 3C4.239 3 2 5.216 2 7.95c0 2.207.875 7.445 9.488 12.74a.985.985 0 0 0 1.024 0C21.125 15.395 22 10.157 22 7.95 22 5.216 19.761 3 17 3s-5 3-5 3-2.239-3-5-3z" />
                            </svg>
                        </button>
                        <script>
                            fetch(`/api/like/check`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    eventId: '@item.Id',
                                    userId: localStorage.getItem('id')
                                })
                            }).then(response => {
                                if (response.ok) {
                                    return response.json();
                                }
                            }).then(data => {
                                if (data) {
                                    document.getElementById('Heart-@item.Id').style.color = 'red';
                                    likeStatus = true;
                                }
                            }).catch(error => {
                                console.error(error);
                            });
                        </script>
                    </div>
                    <div class="member-container">
                        <div class="member">
                            <div>@item.members / @item.EnrollLimit members</div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="card-meta card-meta--views">
                            <img src="https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?size=338&ext=jpg&ga=GA1.1.1395880969.1709164800&semt=ais"
                                alt="Avatar" class="avatar" id="profile-@item.Id">
                            <div class="user-profile">
                                <div class="name" id="organiser-@item.Id"></div>
                                <div class="role">organizers</div>
                            </div>
                            <div class="card-meta card-meta--date">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round" display="block" id="Calendar">
                                    <rect x="2" y="4" width="20" height="18" rx="4" />
                                    <path d="M8 2v4" />
                                    <path d="M16 2v4" />
                                    <path d="M2 10h20" />
                                </svg>
                                <div class="date-format">
                                    <script>
                                        function formatDate(date) {
                                            const parts = date.split(' ');
                                            const dateString = parts[0];
                                            const timeString = parts[1] + ' ' + parts[2];

                                            const dateParts = dateString.split('/');
                                            const month = parseInt(dateParts[0]) - 1;
                                            const day = parseInt(dateParts[1]);
                                            const year = parseInt(dateParts[2]);

                                            let timeParts = timeString.split(':');
                                            let hours = parseInt(timeParts[0]);
                                            const minutes = parseInt(timeParts[1]);

                                            const d = new Date(year, month, day, hours, minutes);

                                            const options = { year: 'numeric', month: 'short', day: '2-digit' };
                                            return d.toLocaleDateString('en', options);
                                        }

                                        var startDate = "@item.EnrollDate.StartDate";
                                        var endDate = "@item.EnrollDate.EndDate";
                                        document.write(formatDate(startDate) + " - " + formatDate(endDate));
                                    </script>
                                </div>
                            </div>
                        </div>
                        <button class="card-button" id="event-button-@item.Id"></button>
                    </div>
                    <script>
                        var organiserId = '@item.CreatedBy';
                        var event_id = '@item.Id';
                        var user_id = localStorage.getItem('id');
                        fetch(`https://kmitltangti.azurewebsites.net/api/user/${organiserId}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then(response => {
                            if (response.ok) {
                                return response.json();
                            }
                        }).then(data => {
                            document.getElementById('organiser-@item.Id').innerHTML = data.fullName;
                            document.getElementById('profile-@item.Id').src = data.imageProfile
                        }).catch(error => {
                            console.error(error);
                        });

                        fetch(`https://kmitltangti.azurewebsites.net/api/enroll/event/${event_id}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then(response => {
                            if (response.ok) {
                                return response.json();
                            }
                        }).then(data => {
                            const enrollmentLimit = "@item.EnrollLimit";
                            const eventStatus = "@item.Status";
                            if (data.member >= enrollmentLimit && "@item.Type" !== 'Queue') {
                                document.querySelector('.card-button').disabled = true;
                                document.getElementById('event-button-@item.Id').innerHTML = 'Event Full';
                                document.getElementById('event-button-@item.Id').style.backgroundColor = 'gray';
                            }
                            else if (eventStatus === 'Closed' || eventStatus === 'NOT OPENED') {
                                document.querySelector('.card-button').disabled = true;
                                document.getElementById('event-button-@item.Id').innerHTML = eventStatus;
                                document.getElementById('event-button-@item.Id').style.backgroundColor = 'gray';
                            }
                            else if (user_id === organiserId) {
                                document.querySelector('.card-button').disabled = true;
                                document.getElementById('event-button-@item.Id').innerHTML = 'View Your Event';
                            }
                            else {
                                document.getElementById('event-button-@item.Id').innerHTML = 'Detail';
                                document.getElementById('event-button-@item.Id').addEventListener('click', function () {
                                    window.location.href = `/Event/Details/${'@item.Id'}`;
                                });
                            }
                        }).catch(error => {
                            console.error(error);
                        })
                    </script>
                </article>
            }
        </div>

        <div class="pagination" id="pagination">
            @for (int i = 1; i <= ViewBag.TotalCount / ViewBag.PageSize + 1; i++)
            {
                <a class="button active"
                    href="@Url.Action("Index", new { page = i, pageSize = ViewBag.PageSize, searchString = ViewBag.SearchString })"></a>
            }
        </div>
    </div>
    <script>
        function handlePagination() {
            const pagination = document.getElementById('pagination');
            const buttons = pagination.getElementsByClassName('button');

            for (let i = 0; i < buttons.length; i++) {
                buttons[i].addEventListener('click', function () {
                    const current = pagination.getElementsByClassName('active');
                    current[0].className = current[0].className.replace(' active', '');
                    this.className += ' active';
                });
            }
            buttons[0].click();
        }
        handlePagination();

        function handleLike(eventId) {
            const heart = document.getElementById('Heart-' + eventId);

            if (heart.style.color === 'red') {
                heart.style.color = 'black';
                fetch(`/api/like/dislike`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        eventId: eventId,
                        userId: localStorage.getItem('id')
                    })
                }).then(response => {
                    if (response.ok) {
                        return response.json();
                    }
                }).then(data => {
                    console.log(data);
                }).catch(error => {
                    console.error(error);
                });
            } else {
                heart.style.color = 'red';
                fetch(`/api/like/userlike`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        eventId: eventId,
                        userId: localStorage.getItem('id')
                    })
                }).then(response => {
                    if (response.ok) {
                        return response.json();
                    }
                }).then(data => {
                    console.log(data);
                }).catch(error => {
                    console.error(error);
                });
            }
        }
    </script>
</body>